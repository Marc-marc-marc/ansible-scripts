- name: set postgresql_version = 9.1
  set_fact:
    postgresql_version: 9.1
    postgis_version: 1.5
    postgis_suffix:
    openjdk_version: 7
  when: ansible_distribution_release == "wheezy"

- name: set postgresql_version = 9.4
  set_fact:
    postgresql_version: 9.4
    postgis_version: 2.1
    postgis_suffix: -2.1
    openjdk_version: 7
  when: ansible_distribution_release == "jessie"

- name: set postgresql_version = 9.5
  set_fact:
    postgresql_version: 9.5
    postgis_version: 2.2
    postgis_suffix: -2.2
    openjdk_version: 8
  when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "16.04"

- name: set postgresql_version = 9.6
  set_fact:
    postgresql_version: 9.6
    postgis_version: 2.3
    postgis_suffix: -2.3
    openjdk_version: 8
  when: ansible_distribution_release == "stretch"

- name: set postgresql_version = 11
  set_fact:
    postgresql_version: 11
    postgis_version: 2.5
    postgis_suffix: -2.5
    openjdk_version: 11
  when: ansible_distribution_release == "buster"

- name: install packages
  apt: pkg={{ item }}
  with_items:
    - bzr  # for josm translations
    - python-dateutil
    - python-imposm-parser
    - python-lockfile
    - python-polib
    - python-poster
    - python-psycopg2
    - python-regex
    - python-requests
    - python-shapely
    - python-regex
    - postgresql-{{ postgresql_version }}
    - postgresql-{{ postgresql_version }}-postgis{{ postgis_suffix }}
    - postgresql-contrib-{{ postgresql_version }}
    - postgis
    - openjdk-{{ openjdk_version }}-jre-headless
    # to run with python3
    - python3-dateutil
    - python3-distro
    - python3-packaging
    - python3-pip
    - python3-polib
    - python3-psycopg2
    - python3-pyosmium
    - python3-shapely
    - python3-regex
    - python3-requests
    - python3-unidecode
    - pyosmium
    # to compile osm_pbf_parser
    - g++
    - libboost-python-dev
    - libosmpbf-dev
    - make
    - pkg-config
    # to compile PyKOpeningHours
    - cmake
    - qtbase5-dev
    - flex
    - bison

- name: init /root/packages/
  file:
    path: /root/packages/
    state: directory

- name: install additional local packages
  copy:
    src: "{{ item }}"
    dest: "/root/packages/{{ item }}"
  with_items:
    - python3-lark-parser_0.6.7-1_all.deb
    - python3-backports.csv_1.0.7-1_all.deb
    - python3-transporthours_0.0.4-1_all.deb

- name: install additional local packages
  apt:
    deb: /root/packages/{{ item }}
  with_items:
    - python3-lark-parser_0.6.7-1_all.deb
    - python3-backports.csv_1.0.7-1_all.deb
    - python3-transporthours_0.0.4-1_all.deb

- name: pip install
  pip:
    executable: pip3
    requirements: /data/project/osmose/backend/requirements.txt
  become: yes
  become_user: osmose

- name: ensure postgresql server is running
  service: name=postgresql state=started

- include: ../../../shared/project-account.yml user=osmose

- name: init /data/work/osmose/ sub path
  file: path=/data/work/osmose/{{ item }} state=directory owner=osmose group=osmose
  with_items:
    - cache
    - diffs
    - extracts
    - logs
    - results
    - tmp

- name: add sudoers to access osmose user
  copy: src=sudoers dest=/etc/sudoers.d/osmose-backend mode=0440 owner=root group=root validate='visudo -cf %s'

- name: init ssh key to osmose user
  authorized_key: user=osmose key="{{ item }}"
  with_file:
    - "{{ lookup('env','PWD') }}/public_keys/fred"
    - "{{ lookup('env','PWD') }}/public_keys/jocelyn"
    - "{{ lookup('env','PWD') }}/public_keys/marc_marc"

- name: init database
  postgresql_db: name=osmose encoding='UTF-8' lc_collate='en_US.UTF-8' lc_ctype='en_US.UTF-8' template='template0'
  register: createdb_osmose
  become: yes
  become_user: postgres

- name: init database user
  postgresql_user: name=osmose password=-osmose- db=osmose priv=ALL
  become: yes
  become_user: postgres

- name: psql extensions
  command: psql -d osmose -c "CREATE EXTENSION IF NOT EXISTS {{ item }}"
  register: psql_res
  changed_when: "not 'extension \"{{ item }}\" already exists' in '{{ psql_res.stderr }}'"
  become: yes
  become_user: postgres
  with_items:
    - fuzzystrmatch
    - hstore
    - unaccent

- name: psql extension postgis
  command: psql -d osmose -c "CREATE EXTENSION IF NOT EXISTS {{ item }}"
  register: psql_res
  changed_when: "not 'extension \"{{ item }}\" already exists' in '{{ psql_res.stderr }}'"
  become: yes
  become_user: postgres
  with_items:
    - postgis
  when: postgresql_version >= 9.4

- name: psql extension postgis
  command: psql -d osmose -f /usr/share/postgresql/9.1/contrib/postgis-1.5/postgis.sql
  when: createdb_osmose.changed
  become: yes
  become_user: postgres
  when: postgresql_version == 9.1

- name: psql extension postgis - spatial_ref_sys
  command: psql -d osmose -f /usr/share/postgresql/{{ postgresql_version }}/contrib/postgis-{{ postgis_version }}/spatial_ref_sys.sql
  when: createdb_osmose.changed
  become: yes
  become_user: postgres

- name: psql access to tables
  postgresql_privs: database=osmose type=table objs={{ item }} roles=osmose privs=SELECT,INSERT,UPDATE,DELETE
  become: yes
  become_user: postgres
  with_items:
    - geometry_columns
    - spatial_ref_sys

- name: create postgresql conf.d
  file:
    path: /etc/postgresql/{{ postgresql_version }}/main/conf.d
    state: directory

- name: configure postgresql
  template:
    dest="/etc/postgresql/{{ postgresql_version }}/main/conf.d/10-ansible-osmose.conf"
    src="postgresql-config"
    owner=root
  notify:
    - reload postgresql

- name: enable postgresql configuration
  lineinfile:
    dest: "/etc/postgresql/{{ postgresql_version }}/main/postgresql.conf"
    regexp: "^.*include_dir = 'conf.d"
    line: "include_dir = 'conf.d'                  # include files ending in '.conf' from"
  when: not 'osmbin' in group_names and not 'osmosis' in group_names and not 'osm2pgsql' in group_names
  notify:
    - reload postgresql

- name: checkout git repository
  git: repo=https://github.com/osm-fr/osmose-backend.git dest=/data/project/osmose/backend/ force=no update=no
  become: yes
  become_user: osmose

- name: git config receive.denyCurrentBranch refuse
  command: chdir=/data/project/osmose/backend/ git config receive.denyCurrentBranch ignore
  become: yes
  become_user: osmose

- name: create branch osmose-fr
  command: chdir=/data/project/osmose/backend/ git branch osmose-fr
  become: yes
  become_user: osmose
  ignore_errors: True

- name: compile osm_pbf_parser for python3
  make:
    chdir: /data/project/osmose/backend/modules/osm_pbf_parser/
    target: py3
  become: yes
  become_user: osmose

- name: init /data/project/osmose/backend/po/josm/ path
  file:
    path: /data/project/osmose/backend/po/josm/
    state: directory
    owner: osmose
    group: osmose

- name: checkout bzr repository for josm translation
  command: bzr checkout --lightweight lp:~openstreetmap/josm/josm_trans
  args:
    creates: /data/project/osmose/backend/po/josm/josm_trans
    chdir: /data/project/osmose/backend/po/josm/
  become: yes
  become_user: osmose
