map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

proxy_cache_path  /dev/shm/nginx-{{ item.logname }}  levels=1:2    keys_zone={{ item.logname }}:1m inactive=300s  max_size=128m;

server {
    listen 80;
    listen [::]:80;
    server_name {{ item.websites }};

    include /etc/nginx/global.d/letsencrypt-challenge.conf;

    location /.well-known/acme-challenge {

    }

    # On redirige tout en HTTPS
    location / {
        return 301 https://$host$request_uri;
    }

    access_log /dev/null;
    error_log /dev/null;
}


server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name {{ item.websites }};

    include /etc/nginx/global.d/letsencrypt-challenge.conf;

    location /.well-known/ {

    }

    access_log /var/log/nginx/{{ item.logname }}-access.log;
    error_log /var/log/nginx/{{ item.logname }}-error.log;

    # HTTPS
    ssl_certificate /etc/ssl/letsencrypt/chained.pem;
    ssl_certificate_key /etc/ssl/letsencrypt/domain.key;
    ssl_dhparam /etc/ssl/letsencrypt/dhparams.pem;

    ssl_protocols TLSv1.2;
    ssl_ecdh_curve prime256v1;
    ssl_ciphers EECDH+AESGCM:EECDH+AES;
    ssl_prefer_server_ciphers on;
# resolver 80.67.169.12 80.67.169.40 valid=300s;
    resolver_timeout 5s;
    ssl_session_cache shared:SSL:10m;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";

    add_header Referrer-Policy "strict-origin-when-cross-origin";
    add_header Content-Security-Policy "default-src 'none'; font-src 'self'; media-src 'self'; style-src 'self' 'unsafe-inline'; script-src 'self'; img-src 'self' data:; connect-src 'self' wss://{{ item.websites }}; frame-ancestors 'none';";
    add_header Permissions-Policy interest-cohort=();

    gzip on;
    gzip_disable "msie6";

    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_min_length 1024;

    location / {
        try_files $uri @proxy;
    }

    location ~ ^/(packs|system/media_attachments/files|system/accounts/avatars) {
        add_header Cache-Control "public, max-age=31536000, immutable";
        try_files $uri @proxy;
    }

    location @proxy {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_pass_header Server;
        proxy_pass http://{{ item.target }};
        proxy_buffering off;
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

    location /api/v1/streaming {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_pass http://{{ item.target }}:4000;
        proxy_buffering off;
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

    error_page 500 501 502 503 504 /500.html;
}

