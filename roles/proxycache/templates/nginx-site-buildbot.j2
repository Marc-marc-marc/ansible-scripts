server {
    listen       80;
    listen       [::]:80;
    server_name  {{ item.websites }};

{% if item.redirect_to_https is defined and item.redirect_to_https %}
    return 307 https://$host$request_uri;
}

server {
    server_name  {{ item.websites }};

{% endif %}
    include /etc/nginx/global.d/*.conf;

    #charset koi8-r;
    access_log  "/var/log/nginx/{{ item.logname }}.access.log";

    client_max_body_size 50M;

    proxy_connect_timeout 6000;
    proxy_send_timeout    6000;
    proxy_read_timeout    6000;
    send_timeout          6000;

    proxy_set_header   Host             $host;
    proxy_set_header   X-Real-IP        $remote_addr;
    proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Proto $scheme;
    proxy_set_header   X-Forwarded-Server  $host;
    proxy_set_header   X-Forwarded-Host  $host;

    location / {
{% if item.target_port is defined %}
        proxy_pass	http://{{ item.target }}:{{ item.target_port }};
{% else %}
        proxy_pass	http://{{ item.target }};
{% endif %}
        proxy_redirect  off;
   }

    location /sse/ {
        proxy_redirect  off;
        # proxy buffering will prevent sse to work
        proxy_buffering off;
{% if item.target_port is defined %}
        proxy_pass	http://{{ item.target }}:{{ item.target_port }};
{% else %}
        proxy_pass	http://{{ item.target }};
{% endif %}
    }

    # required for websocket
    location /ws {
        proxy_redirect  off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
{% if item.target_port is defined %}
        proxy_pass	http://{{ item.target }}:{{ item.target_port }};
{% else %}
        proxy_pass	http://{{ item.target }};
{% endif %}
        # raise the proxy timeout for the websocket
        proxy_read_timeout 6000s;
    }
}

